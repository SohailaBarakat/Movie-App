-- Create Sequences for Primary Keys
CREATE SEQUENCE users_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE roles_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE ratings_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE user_roles_seq START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE movies_seq START WITH 1 INCREMENT BY 1;


-- Create User Roles Table
CREATE TABLE user_roles (
    id NUMBER PRIMARY KEY,
    role_name VARCHAR2(50) NOT NULL UNIQUE
);

-- Create Users Table
CREATE TABLE users (
    id NUMBER PRIMARY KEY,
    username VARCHAR2(255) NOT NULL UNIQUE,
    password VARCHAR2(255) NOT NULL,
    email VARCHAR2(255) UNIQUE,
    role_id NUMBER NOT NULL,
    CONSTRAINT fk_user_role FOREIGN KEY (role_id) REFERENCES user_roles(id)
);

-- Create Movies Table
CREATE TABLE movies (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    imdb_id VARCHAR2(20) NOT NULL UNIQUE,
    title VARCHAR2(255) NOT NULL,
    year VARCHAR2(10),
    type VARCHAR2(50),
    genre VARCHAR2(255),
    poster VARCHAR2(500),
    director VARCHAR2(255),
    writer VARCHAR2(500),
    actors VARCHAR2(1000),
    plot CLOB,
    language VARCHAR2(255),
    average_rating DECIMAL(3, 2) DEFAULT 0.0,
    admin_id NUMBER NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_movies_admin FOREIGN KEY (admin_id) REFERENCES users(id)
);

-- Create Ratings Table
CREATE TABLE ratings (
    id NUMBER PRIMARY KEY,
    movie_id NUMBER NOT NULL,
    user_id NUMBER NOT NULL,
    rating NUMBER CHECK (rating BETWEEN 1 AND 5),
    CONSTRAINT fk_ratings_movie FOREIGN KEY (movie_id) REFERENCES movies(id),
    CONSTRAINT fk_ratings_user FOREIGN KEY (user_id) REFERENCES users(id)
);

-- Create Triggers for Auto-Incremented IDs
CREATE OR REPLACE TRIGGER trg_users_pk
BEFORE INSERT ON users
FOR EACH ROW
BEGIN
    SELECT users_seq.NEXTVAL INTO :NEW.id FROM dual;
END;
/

CREATE OR REPLACE TRIGGER trg_roles_pk
BEFORE INSERT ON user_roles
FOR EACH ROW
BEGIN
    SELECT roles_seq.NEXTVAL INTO :NEW.id FROM dual;
END;
/

CREATE OR REPLACE TRIGGER trg_ratings_pk
BEFORE INSERT ON ratings
FOR EACH ROW
BEGIN
    SELECT ratings_seq.NEXTVAL INTO :NEW.id FROM dual;
END;
/

CREATE OR REPLACE TRIGGER trg_user_roles_pk
BEFORE INSERT ON user_roles
FOR EACH ROW
BEGIN
    SELECT user_roles_seq.NEXTVAL INTO :NEW.id FROM dual;
END;
/

CREATE OR REPLACE TRIGGER trg_movies_pk
BEFORE INSERT ON movies
FOR EACH ROW
BEGIN
    SELECT movies_seq.NEXTVAL INTO :NEW.id FROM dual;
END;
/
